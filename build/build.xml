<?xml version="1.0" encoding="UTF-8"?>
<project name="Phing Documentation" default="build">

    <property name="source.directory" value="${project.basedir}/../xml" />
    <property name="dist.directory" value="${project.basedir}/dist" />
    <property name="stage.directory" value="${project.basedir}/stage" />

    <!-- Default values -->
    <property name="lang" value="fr" />

    <property file="build.properties" override="true" />
    

    <target name="build">
        <echo msg="Hello, World!" />

        <phingcall target="prepare" />

        <phingcall target="build.html" />

        <phingcall target="build.pdf" />

    </target>



    <target name="prepare">
        <mkdir dir="${dist.directory}" />

        <echo msg="Staging" />
        <foreach list="${languages}" param="lang" target="stage.lang" />

    </target>


    <target name="stage.lang">
        <echo msg="Staging '${lang}'" />
        <mkdir dir="${stage.directory}/${lang}" />

        <echo msg="Staging from '${source.directory}/${lang}/' to '${stage.directory}/${lang}/'" />
        <copy todir="${stage.directory}/${lang}" overwrite="true">
            <fileset dir="${source.directory}/${lang}">
            </fileset>
        </copy>
        
    </target>



    <target name="build.html">
        <echo msg="Build HTML documentation" />

        <echo msg="Staging" />
        <foreach list="${languages}" param="lang" target="build.html.lang" />

    </target>


    <target name="build.html.lang">
        <echo msg="Build HTML documentation : '${lang}'" />

        <reflexive>
            <filterchain>
                <replacetokens begintoken="##" endtoken="##">
                    <token key="DOCBOOK_XSL" value="${docbook.xsl.htmlchunked}" />
                    <token key="DOCBOOK_DTD" value="${docbook.dtd.url}" />
                </replacetokens>
            </filterchain>
            <fileset dir="${stage.directory}/${lang}">
                <include name="manual.xml" />
                <include name="html.xsl" />
            </fileset>
        </reflexive>

        <copy file="${stage.directory}/${lang}/docbook.html.css" todir="${dist.directory}/${lang}" />
        <copy todir="${dist.directory}/${lang}">
            <fileset defaultexcludes="false" expandsymboliclinks="true" dir="${stage.directory}/${lang}">
                <include name="**/*.png"/>
            </fileset>
        </copy>

        <copy todir="${dist.directory}/${lang}">
            <filterchain>
                <xincludefilter basedir="${stage.directory}/${lang}"/>
                <filterreader classname="tasks.MyXsltFilter">
                    <param name="base.dir" value="${dist.directory}/${lang}/"/>
                    <param name="style" value="${stage.directory}/${lang}/html.xsl"/>
                </filterreader>
            </filterchain>
            <fileset dir="${stage.directory}/${lang}">
                <include name="manual.xml"/>
            </fileset>
        </copy>

        <delete file="${dist.directory}/${lang}/manual.xml" />

        <syntaxhighlighthtml>
            <fileset dir="${dist.directory}/${lang}">
                <include name="*.html"/>
            </fileset>
        </syntaxhighlighthtml>

    </target>



    <target name="build.pdf">
        <echo msg="Build PDF documentation" />

        <echo msg="Staging" />
        <foreach list="${languages}" param="lang" target="build.pdf.lang" />

    </target>

    <target name="build.pdf.lang">
        <echo msg="Build PDF documentation : '${lang}'" />

        <reflexive>
            <filterchain>
                <replacetokens begintoken="##" endtoken="##">
                    <token key="DOCBOOK_XSL" value="${docbook.xsl.fo}" />
                    <token key="DOCBOOK_XSL_ADMON_GRAPHICS_PATH" value="${docbook.xsl.admongraphicspath}" />
                </replacetokens>
            </filterchain>
            <fileset dir="${stage.directory}/${lang}">
                <include name="fo.xsl" />
            </fileset>
        </reflexive>
        
        <copy todir="${stage.directory}/${lang}/pdf">
            <filterchain>
                <xincludefilter basedir="${stage.directory}/${lang}"/>
                <filterreader classname="tasks.MyXsltFilter">
                    <param name="base.dir" value="${dist.directory}/${lang}/"/>
                    <param name="style" value="${stage.directory}/${lang}/fo.xsl"/>
                </filterreader>
            </filterchain>
            <fileset dir="${stage.directory}/${lang}">
                <include name="manual.xml"/>
            </fileset>
        </copy>

		<copy file="${stage.directory}/${lang}/pdf/manual.xml" tofile="${stage.directory}/${lang}/pdf/manual.fo" overwrite="true"/>
        <echo msg="Generated .fo for '${lang}' : ${stage.directory}/${lang}/pdf/manual.fo" />

        <syntaxhighlightfo file="${stage.directory}/${lang}/pdf/manual.fo" />
		<echo msg="SyntaxHighlighted .fo for '${lang}' : ${stage.directory}/${lang}/pdf/manual.fo" />

        <exec command="fop manual.fo ${fop_conf} manual.pdf" dir="${stage.directory}/${lang}/pdf" />

		<copy file="${stage.directory}/${lang}/pdf/manual.pdf" tofile="${dist.directory}/${lang}/phing-documentation-${lang}.pdf" overwrite="true"/>
        
    </target>



    <target name="clean">
        <delete dir="${dist.directory}" />
        <delete dir="${stage.directory}" />
        <delete file="HTML.manifest" />
    </target>



    <taskdef classname="tasks.SyntaxHighlightHtmlTask" name="syntaxhighlighthtml" />
    <taskdef classname="tasks.SyntaxHighlightFoTask" name="syntaxhighlightfo" />
    
</project>